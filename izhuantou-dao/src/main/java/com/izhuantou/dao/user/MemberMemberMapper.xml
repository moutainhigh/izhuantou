<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.izhuantou.dao.user.MemberMemberMapper">
	<!-- 获取用户的信息 -->
	<select id="findUserByName" resultType="com.izhuantou.damain.user.MemberMember">
		select * from
		member_member where name=#{name}
	</select>
	<!-- 获取用户的信息 -->
	<select id="findUserByOID" resultType="com.izhuantou.damain.user.MemberMember">
		select * from
		member_member where OID=#{OID}
	</select>

	<!-- 根据用户输入的账号和密码进行注册 -->
	<insert id="registUser" parameterType="com.izhuantou.damain.user.MemberMember">
	insert into member_member
	(OID,name,memberAccount,password,valid,addDateTime,updDateTime,refresh,version,yewuOID,addUserOID,opportunity)
	value(#{OID},#{name},#{memberAccount},#{password},1,NOW(),NOW(),1,0,#{yewuOID},#{addUserOID},5)
	</insert>
	<!-- 根据用户输入的账号进行密码修改 -->
	<update id="updatePassword" parameterType="com.izhuantou.damain.user.MemberMember">
		update member_member
		set password=#{password},updDateTime=NOW(),opportunity=5,version = version+1 where
		name=#{name} and version = #{version}
	</update>
	
	
	<!--根据用户的OID进行密保问题设置 -->
	<update id="insertTwoQuestion" parameterType="com.izhuantou.damain.user.MemberMember">
		update
		member_member set
		questionOne=#{questionOne},
		questionTwo=#{questionTwo},
		answerOne=#{answerOne},
		answerTwo=#{answerTwo},
		updDateTime=NOW(),
		version = #{version}+1
		where
		OID=#{OID} and version = #{version}


	</update>
	<!--根据用户的OID进行实名信息更新 -->
	<update id="updateRealNameByOID" parameterType="com.izhuantou.damain.user.MemberMember">
		UPDATE
		member_member SET
		mobile=#{mobile},
		city=#{city},
		nameCN=#{nameCN},
		realName=#{realName},
		idCard=#{idCard},
		updDateTime=NOW(),
		version =
		version+1
		where OID=#{OID} and version = #{version}
	</update>

	<!-- 判断是不是新手 -->
	<select id="findXSNum" resultType="int">
		SELECT (SELECT COUNT(*) FROM
		PAY_TransferReturn pt JOIN WEBP2P_NoviceBiddingRuning nbr ON
		nbr.OID=pt.businessOID WHERE pt.outMemberOID=#{memberOID})+
		(SELECT
		COUNT(*) FROM PAY_DebitCredit pd JOIN WEBP2P_NoviceBiddingRuning nbr
		ON nbr.OID=pd.businessOID WHERE pd.outMemberOID=#{memberOID}) AS num

	</select>
	<update id="updateMemberMember" parameterType="com.izhuantou.damain.user.MemberMember">
		UPDATE
		member_member
		SET
		name = #{name},
		clientOID = #{clientOID},
		memberNumber =
		#{memberNumber},
		memberAccount = #{memberAccount},
		nickName =
		#{nickName},
		realName = #{realName},
		password = #{password},
		nameCN =
		#{nameCN},
		gender =#{gender},
		age = #{age},
		birthday = #{birthday},
		idCard = #{idCard},
		mobile = #{mobile},
		email =#{email},
		marriage =
		#{marriage},
		address = #{address},
		referrals =#{referrals},
		provider =
		#{provider},
		city = #{city},
		registerTime = #{registerTime},
		userType =
		#{userType},
		loanInvestmentType = #{loanInvestmentType},
		viewType =
		#{viewType},
		realOID = #{realOID},
		state = #{state},
		yewuOID =
		#{yewuOID},
		xieli = #{xieli},
		school = #{school},
		company = #{company},
		comscale = #{comscale},
		position = #{position},
		income = #{income},
		house = #{house},
		car = #{car},
		describe0 = #{describe0},
		NO = #{NO},
		addUserOID = #{addUserOID},
		updUserOID = #{updUserOID},
		valid =
		#{valid},
		addDateTime =#{addDateTime},
		updDateTime = NOW(),
		refresh = #{refresh},
		version = version+1,
		picOID =#{picOID},
		questionOne = #{questionOne},
		answerOne = #{answerOne},
		questionTwo =
		#{questionTwo},
		answerTwo = #{answerTwo},
		blacklist = #{blacklist},
		opportunity = #{opportunity}
		WHERE
		OID = #{OID} and version = #{version}
	</update>

	<!-- 根据时间段获取总数据数 -->
	<select id="countByDate" resultType="java.lang.Integer">
		SELECT count(*) from
		member_member where addDateTime BETWEEN #{cqcDTO.startDate} AND
		#{cqcDTO.endDate}
	</select>

	<!-- 获取分页数据 -->
	<select id="listCustomer" resultType="com.izhuantou.damain.vo.member.CustomerListDTO">
		SELECT
		OID,memberAccount,mobile,nickName,realName,userType,idCard,addDateTime,email,yewuOID
		from member_member
		order by addDateTime desc
		limit
		#{startIndex},#{pageSize}
	</select>

	<!-- 根据条件获取数据总数 -->
	<select id="conditionCount" resultType="java.lang.Integer">
		select count(*)
		FROM
		member_member m
		LEFT JOIN pay_customer c ON c.memberOID = m.OID
		where 1=1
		<if test="cqcDTO.startDate != null and cqcDTO.startDate !=''">
			and m.addDateTime between #{cqcDTO.startDate} and
			#{cqcDTO.endDate}
		</if>
		<if test="cqcDTO.keyWord !=null and cqcDTO.keyWord != ''">
			and ${cqcDTO.keyWordType} like "%"#{cqcDTO.keyWord}"%"
		</if>
		<if test="cqcDTO.idCardStatus !=null and cqcDTO.idCardStatus != '' ">
			and m.idCard
			<if test="cqcDTO.idCardStatus == 1">
				is not null
			</if>
			<if test="cqcDTO.idCardStatus ==2">
				is null
			</if>
		</if>
		<if test="cqcDTO.bankNumberStatus != null and cqcDTO.bankNumberStatus != ''">
			and c.bankNumber
			<if test="cqcDTO.bankNumberStatus == 1">
				is not null
			</if>
			<if test="cqcDTO.bankNumberStatus == 2">
				is null
			</if>
		</if>
		order by m.addDateTime ${cqcDTO.dateSort}
	</select>

	<!-- 根据条件获取分页数据 -->
	<select id="conditionList" resultType="com.izhuantou.damain.vo.member.CustomerListDTO">
		SELECT
		m.OID,m.memberAccount,m.mobile,m.nickName,m.realName,m.userType,m.idCard,m.addDateTime,m.email,m.yewuOID,c.bankNumber
		FROM
		member_member m
		LEFT JOIN pay_customer c ON c.memberOID = m.OID
		where 1=1
		<if test="cqcDTO.startDate != null and cqcDTO.startDate !=''">
			and m.addDateTime between #{cqcDTO.startDate} and
			#{cqcDTO.endDate}
		</if>
		<if test="cqcDTO.keyWord !=null and cqcDTO.keyWord != ''">
			and ${cqcDTO.keyWordType} like "%"#{cqcDTO.keyWord}"%"
		</if>
		<if test="cqcDTO.idCardStatus !=null and cqcDTO.idCardStatus != '' ">
			and m.idCard
			<if test="cqcDTO.idCardStatus == 1">
				is not null
			</if>
			<if test="cqcDTO.idCardStatus ==2">
				is null
			</if>
		</if>
		<if test="cqcDTO.bankNumberStatus != null and cqcDTO.bankNumberStatus != ''">
			and c.bankNumber
			<if test="cqcDTO.bankNumberStatus == 1">
				is not null
			</if>
			<if test="cqcDTO.bankNumberStatus == 2">
				is null
			</if>
		</if>
		order by m.addDateTime ${cqcDTO.dateSort}
		limit #{startIndex},#{pageSize}
	</select>

	<!-- 根据oid获取数据集 -->
	<select id="selectByOID" resultType="com.izhuantou.damain.vo.member.CustomerListDTO">
		select
		OID,memberAccount,mobile,nickName,realName,userType,idCard,addDateTime,email,yewuOID
		from
		member_member
		where OID in
		<foreach collection="array" item="ids" index="index" open="("
			close=")" separator=",">
			#{ids}
		</foreach>
	</select>

	<!-- 根据条件获取数据 -->
	<select id="listByCondition" resultType="com.izhuantou.damain.vo.member.CustomerListDTO">
		SELECT
		m.OID,m.memberAccount,m.mobile,m.nickName,m.realName,m.userType,m.idCard,m.addDateTime,m.email,m.yewuOID,c.bankNumber
		FROM
		member_member m
		LEFT JOIN pay_customer c ON c.memberOID = m.OID
		where 1=1
		<if test="cqcDTO.startDate != null and cqcDTO.startDate !=''">
			and m.addDateTime between #{cqcDTO.startDate} and
			#{cqcDTO.endDate}
		</if>
		<if test="cqcDTO.keyWord !=null and cqcDTO.keyWord != ''">
			and ${cqcDTO.keyWordType} like "%"#{cqcDTO.keyWord}"%"
		</if>
		<if test="cqcDTO.idCardStatus !=null and cqcDTO.idCardStatus != '' ">
			and m.idCard
			<if test="cqcDTO.idCardStatus == 1">
				is not null
			</if>
			<if test="cqcDTO.idCardStatus ==2">
				is null
			</if>
		</if>
		<if test="cqcDTO.bankNumberStatus != null and cqcDTO.bankNumberStatus != ''">
			and c.bankNumber
			<if test="cqcDTO.bankNumberStatus == 1">
				is not null
			</if>
			<if test="cqcDTO.bankNumberStatus == 2">
				is null
			</if>
		</if>
		order by m.addDateTime ${cqcDTO.dateSort}
	</select>

	<!-- 根据手机号获取客户姓名 -->
	<select id="selectByMobile" resultType="com.izhuantou.damain.user.MemberMember">
		select * from
		member_member where mobile = #{mobile} limit 1
	</select>
	
	<!-- 修改密码可输入的次数 -->
	<update id="updateOpportunity" parameterType="com.izhuantou.damain.user.MemberMember">
		update member_member
		set opportunity=#{opportunity}, version =version+1, updDateTime = NOW() where
		OID = #{OID} and version = #{version}
	</update>

</mapper>